{
  "id": "293eff6a-c458-467c-a45f-6dcd15dc9112",
  "prevId": "7274a34a-9ff9-420b-bbd7-ae7a9d902ccb",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.account": {
      "name": "account",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "providerAccountId": {
          "name": "providerAccountId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "token_type": {
          "name": "token_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "session_state": {
          "name": "session_state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "accounts_user_provider_idx": {
          "name": "accounts_user_provider_idx",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "provider",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "accounts_user_idx": {
          "name": "accounts_user_idx",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "account_userId_user_id_fk": {
          "name": "account_userId_user_id_fk",
          "tableFrom": "account",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "account_provider_providerAccountId_pk": {
          "name": "account_provider_providerAccountId_pk",
          "columns": [
            "provider",
            "providerAccountId"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.all_user": {
      "name": "all_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "temporary_user_id": {
          "name": "temporary_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "all_users_one_ref_guard": {
          "name": "all_users_one_ref_guard",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "where": "(CASE WHEN \"all_user\".\"user_id\" IS NOT NULL THEN 1 ELSE 0 END +\n                   CASE WHEN \"all_user\".\"temporary_user_id\" IS NOT NULL THEN 1 ELSE 0 END) = 1",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.asset_delete_jobs": {
      "name": "asset_delete_jobs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "asset_ids": {
          "name": "asset_ids",
          "type": "uuid[]",
          "primaryKey": false,
          "notNull": true
        },
        "storage_backend": {
          "name": "storage_backend",
          "type": "storage_backend_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "total_assets": {
          "name": "total_assets",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "processed_assets": {
          "name": "processed_assets",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "failed_assets": {
          "name": "failed_assets",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "results": {
          "name": "results",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "error": {
          "name": "error",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "retry_count": {
          "name": "retry_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "max_retries": {
          "name": "max_retries",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 3
        },
        "next_retry_at": {
          "name": "next_retry_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "started_at": {
          "name": "started_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "asset_delete_jobs_status_idx": {
          "name": "asset_delete_jobs_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "next_retry_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "asset_delete_jobs_user_idx": {
          "name": "asset_delete_jobs_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "asset_delete_jobs_user_id_user_id_fk": {
          "name": "asset_delete_jobs_user_id_user_id_fk",
          "tableFrom": "asset_delete_jobs",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "asset_delete_jobs_counts_check": {
          "name": "asset_delete_jobs_counts_check",
          "value": "\"asset_delete_jobs\".\"processed_assets\" + \"asset_delete_jobs\".\"failed_assets\" <= \"asset_delete_jobs\".\"total_assets\""
        },
        "asset_delete_jobs_status_check": {
          "name": "asset_delete_jobs_status_check",
          "value": "(\n        (\"asset_delete_jobs\".\"status\" = 'pending' AND \"asset_delete_jobs\".\"started_at\" IS NULL) OR\n        (\"asset_delete_jobs\".\"status\" = 'processing' AND \"asset_delete_jobs\".\"started_at\" IS NOT NULL) OR\n        (\"asset_delete_jobs\".\"status\" IN ('completed', 'failed', 'partially_failed') AND \n         \"asset_delete_jobs\".\"started_at\" IS NOT NULL)\n      )"
        }
      },
      "isRLSEnabled": false
    },
    "public.memories": {
      "name": "memories",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "owner_id": {
          "name": "owner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "memory_type_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_public": {
          "name": "is_public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "owner_secure_code": {
          "name": "owner_secure_code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "parent_folder_id": {
          "name": "parent_folder_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "memory_status_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "tags": {
          "name": "tags",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'"
        },
        "recipients": {
          "name": "recipients",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'"
        },
        "file_created_at": {
          "name": "file_created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "unlock_date": {
          "name": "unlock_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "created_by": {
          "name": "created_by",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "updated_by": {
          "name": "updated_by",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "json",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::json"
        },
        "storage_locations": {
          "name": "storage_locations",
          "type": "storage_backend_t[]",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'"
        },
        "storage_duration": {
          "name": "storage_duration",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "storage_count": {
          "name": "storage_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        }
      },
      "indexes": {
        "memories_owner_created_idx": {
          "name": "memories_owner_created_idx",
          "columns": [
            {
              "expression": "owner_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memories_status_updated_idx": {
          "name": "memories_status_updated_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "updated_at",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memories_expires_at_idx": {
          "name": "memories_expires_at_idx",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memories_type_idx": {
          "name": "memories_type_idx",
          "columns": [
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memories_public_idx": {
          "name": "memories_public_idx",
          "columns": [
            {
              "expression": "is_public",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memories_tags_idx": {
          "name": "memories_tags_idx",
          "columns": [
            {
              "expression": "tags",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memories_storage_locations_idx": {
          "name": "memories_storage_locations_idx",
          "columns": [
            {
              "expression": "storage_locations",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memories_storage_duration_idx": {
          "name": "memories_storage_duration_idx",
          "columns": [
            {
              "expression": "storage_duration",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "memories_owner_id_all_user_id_fk": {
          "name": "memories_owner_id_all_user_id_fk",
          "tableFrom": "memories",
          "tableTo": "all_user",
          "columnsFrom": [
            "owner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "memories_created_by_user_id_fk": {
          "name": "memories_created_by_user_id_fk",
          "tableFrom": "memories",
          "tableTo": "user",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "memories_updated_by_user_id_fk": {
          "name": "memories_updated_by_user_id_fk",
          "tableFrom": "memories",
          "tableTo": "user",
          "columnsFrom": [
            "updated_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "memories_expires_at_check": {
          "name": "memories_expires_at_check",
          "value": "expires_at IS NULL OR (SELECT COUNT(*) FROM memory_assets WHERE memory_assets.memory_id = memories.id AND memory_assets.upload_status = 'pending') > 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.audio_details": {
      "name": "audio_details",
      "schema": "",
      "columns": {
        "memory_id": {
          "name": "memory_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "duration_ms": {
          "name": "duration_ms",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "bitrate": {
          "name": "bitrate",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "sample_rate": {
          "name": "sample_rate",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "channels": {
          "name": "channels",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "audio_details_memory_id_memories_id_fk": {
          "name": "audio_details_memory_id_memories_id_fk",
          "tableFrom": "audio_details",
          "tableTo": "memories",
          "columnsFrom": [
            "memory_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.authenticator": {
      "name": "authenticator",
      "schema": "",
      "columns": {
        "credentialID": {
          "name": "credentialID",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "providerAccountId": {
          "name": "providerAccountId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "credentialPublicKey": {
          "name": "credentialPublicKey",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "counter": {
          "name": "counter",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "credentialDeviceType": {
          "name": "credentialDeviceType",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "credentialBackedUp": {
          "name": "credentialBackedUp",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "transports": {
          "name": "transports",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "authenticator_userId_user_id_fk": {
          "name": "authenticator_userId_user_id_fk",
          "tableFrom": "authenticator",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "authenticator_credentialID_unique": {
          "name": "authenticator_credentialID_unique",
          "nullsNotDistinct": false,
          "columns": [
            "credentialID"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.background_jobs": {
      "name": "background_jobs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "priority": {
          "name": "priority",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "scheduled_at": {
          "name": "scheduled_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "run_at": {
          "name": "run_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "progress": {
          "name": "progress",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "total_items": {
          "name": "total_items",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "processed_items": {
          "name": "processed_items",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "result": {
          "name": "result",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "error": {
          "name": "error",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "retry_count": {
          "name": "retry_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "max_retries": {
          "name": "max_retries",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 3
        },
        "last_error": {
          "name": "last_error",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "next_retry_at": {
          "name": "next_retry_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "context": {
          "name": "context",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "created_by": {
          "name": "created_by",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "started_at": {
          "name": "started_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "background_jobs_status_run_at_idx": {
          "name": "background_jobs_status_run_at_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "run_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "priority",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "background_jobs_created_at_idx": {
          "name": "background_jobs_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "background_jobs_type_status_idx": {
          "name": "background_jobs_type_status_idx",
          "columns": [
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "scheduled_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "background_jobs_progress_check": {
          "name": "background_jobs_progress_check",
          "value": "\"background_jobs\".\"progress\" >= 0 AND \"background_jobs\".\"progress\" <= 100"
        },
        "background_jobs_retries_check": {
          "name": "background_jobs_retries_check",
          "value": "\"background_jobs\".\"retry_count\" <= \"background_jobs\".\"max_retries\""
        },
        "background_jobs_timing_check": {
          "name": "background_jobs_timing_check",
          "value": "(\n        (\"background_jobs\".\"status\" = 'pending' AND \"background_jobs\".\"started_at\" IS NULL) OR\n        (\"background_jobs\".\"status\" = 'running' AND \"background_jobs\".\"started_at\" IS NOT NULL) OR\n        (\"background_jobs\".\"status\" IN ('completed', 'failed', 'cancelled') AND \n         \"background_jobs\".\"started_at\" IS NOT NULL AND \n         \"background_jobs\".\"completed_at\" IS NOT NULL)\n      )"
        }
      },
      "isRLSEnabled": false
    },
    "public.blobs": {
      "name": "blobs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "content_hash": {
          "name": "content_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "size_bytes": {
          "name": "size_bytes",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "mime_type": {
          "name": "mime_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "storage_backend": {
          "name": "storage_backend",
          "type": "storage_backend_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "storage_key": {
          "name": "storage_key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "storage_bucket": {
          "name": "storage_bucket",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "reference_count": {
          "name": "reference_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "is_public": {
          "name": "is_public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "last_accessed_at": {
          "name": "last_accessed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "blobs_content_hash_idx": {
          "name": "blobs_content_hash_idx",
          "columns": [
            {
              "expression": "content_hash",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "storage_backend",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "blobs_storage_idx": {
          "name": "blobs_storage_idx",
          "columns": [
            {
              "expression": "storage_backend",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "storage_key",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "storage_bucket",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "blobs_ref_count_idx": {
          "name": "blobs_ref_count_idx",
          "columns": [
            {
              "expression": "reference_count",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "last_accessed_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"blobs\".\"reference_count\" <= 0",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "blobs_expires_at_idx": {
          "name": "blobs_expires_at_idx",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"blobs\".\"expires_at\" IS NOT NULL",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.business_relationship": {
      "name": "business_relationship",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "business_id": {
          "name": "business_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "client_id": {
          "name": "client_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "client_name": {
          "name": "client_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "client_email": {
          "name": "client_email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "business_relationship_business_idx": {
          "name": "business_relationship_business_idx",
          "columns": [
            {
              "expression": "business_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "business_relationship_client_idx": {
          "name": "business_relationship_client_idx",
          "columns": [
            {
              "expression": "client_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "business_relationship_business_id_all_user_id_fk": {
          "name": "business_relationship_business_id_all_user_id_fk",
          "tableFrom": "business_relationship",
          "tableTo": "all_user",
          "columnsFrom": [
            "business_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "business_relationship_client_id_all_user_id_fk": {
          "name": "business_relationship_client_id_all_user_id_fk",
          "tableFrom": "business_relationship",
          "tableTo": "all_user",
          "columnsFrom": [
            "client_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.document_details": {
      "name": "document_details",
      "schema": "",
      "columns": {
        "memory_id": {
          "name": "memory_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "pages": {
          "name": "pages",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "mime_type": {
          "name": "mime_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "document_details_memory_id_memories_id_fk": {
          "name": "document_details_memory_id_memories_id_fk",
          "tableFrom": "document_details",
          "tableTo": "memories",
          "columnsFrom": [
            "memory_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.family_member": {
      "name": "family_member",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "owner_id": {
          "name": "owner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "full_name": {
          "name": "full_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "primary_relationship": {
          "name": "primary_relationship",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "fuzzy_relationships": {
          "name": "fuzzy_relationships",
          "type": "text[]",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'"
        },
        "birth_date": {
          "name": "birth_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "death_date": {
          "name": "death_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "birthplace": {
          "name": "birthplace",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "json",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::json"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "family_member_owner_id_all_user_id_fk": {
          "name": "family_member_owner_id_all_user_id_fk",
          "tableFrom": "family_member",
          "tableTo": "all_user",
          "columnsFrom": [
            "owner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "family_member_user_id_all_user_id_fk": {
          "name": "family_member_user_id_all_user_id_fk",
          "tableFrom": "family_member",
          "tableTo": "all_user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "family_member_user_fk": {
          "name": "family_member_user_fk",
          "tableFrom": "family_member",
          "tableTo": "all_user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.family_relationship": {
      "name": "family_relationship",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "relationship_id": {
          "name": "relationship_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "family_role": {
          "name": "family_role",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "relationship_clarity": {
          "name": "relationship_clarity",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'fuzzy'"
        },
        "shared_ancestor_id": {
          "name": "shared_ancestor_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "family_relationship_relationship_id_relationship_id_fk": {
          "name": "family_relationship_relationship_id_relationship_id_fk",
          "tableFrom": "family_relationship",
          "tableTo": "relationship",
          "columnsFrom": [
            "relationship_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "family_relationship_shared_ancestor_id_all_user_id_fk": {
          "name": "family_relationship_shared_ancestor_id_all_user_id_fk",
          "tableFrom": "family_relationship",
          "tableTo": "all_user",
          "columnsFrom": [
            "shared_ancestor_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.folders": {
      "name": "folders",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "owner_id": {
          "name": "owner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "parent_folder_id": {
          "name": "parent_folder_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "folders_owner_idx": {
          "name": "folders_owner_idx",
          "columns": [
            {
              "expression": "owner_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "folders_parent_idx": {
          "name": "folders_parent_idx",
          "columns": [
            {
              "expression": "parent_folder_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "folders_owner_id_all_user_id_fk": {
          "name": "folders_owner_id_all_user_id_fk",
          "tableFrom": "folders",
          "tableTo": "all_user",
          "columnsFrom": [
            "owner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.gallery": {
      "name": "gallery",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "owner_id": {
          "name": "owner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_public": {
          "name": "is_public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "total_memories": {
          "name": "total_memories",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "storage_locations": {
          "name": "storage_locations",
          "type": "storage_backend_t[]",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'"
        },
        "average_storage_duration": {
          "name": "average_storage_duration",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "storage_distribution": {
          "name": "storage_distribution",
          "type": "json",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::json"
        }
      },
      "indexes": {
        "galleries_storage_locations_idx": {
          "name": "galleries_storage_locations_idx",
          "columns": [
            {
              "expression": "storage_locations",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "galleries_storage_duration_idx": {
          "name": "galleries_storage_duration_idx",
          "columns": [
            {
              "expression": "average_storage_duration",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "gallery_owner_id_all_user_id_fk": {
          "name": "gallery_owner_id_all_user_id_fk",
          "tableFrom": "gallery",
          "tableTo": "all_user",
          "columnsFrom": [
            "owner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.gallery_item": {
      "name": "gallery_item",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "gallery_id": {
          "name": "gallery_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "memory_id": {
          "name": "memory_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "memory_type": {
          "name": "memory_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "position": {
          "name": "position",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "caption": {
          "name": "caption",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_featured": {
          "name": "is_featured",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "metadata": {
          "name": "metadata",
          "type": "json",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::json"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "gallery_items_gallery_position_idx": {
          "name": "gallery_items_gallery_position_idx",
          "columns": [
            {
              "expression": "gallery_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "position",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "gallery_items_gallery_memory_uq": {
          "name": "gallery_items_gallery_memory_uq",
          "columns": [
            {
              "expression": "gallery_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "memory_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "memory_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "gallery_items_by_memory_idx": {
          "name": "gallery_items_by_memory_idx",
          "columns": [
            {
              "expression": "memory_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "memory_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "gallery_item_gallery_id_gallery_id_fk": {
          "name": "gallery_item_gallery_id_gallery_id_fk",
          "tableFrom": "gallery_item",
          "tableTo": "gallery",
          "columnsFrom": [
            "gallery_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.gallery_share": {
      "name": "gallery_share",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "gallery_id": {
          "name": "gallery_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "owner_id": {
          "name": "owner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "shared_with_type": {
          "name": "shared_with_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "shared_with_id": {
          "name": "shared_with_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "group_id": {
          "name": "group_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "shared_relationship_type": {
          "name": "shared_relationship_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_level": {
          "name": "access_level",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'read'"
        },
        "invitee_secure_code": {
          "name": "invitee_secure_code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "secure_code_created_at": {
          "name": "secure_code_created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "gallery_share_gallery_id_gallery_id_fk": {
          "name": "gallery_share_gallery_id_gallery_id_fk",
          "tableFrom": "gallery_share",
          "tableTo": "gallery",
          "columnsFrom": [
            "gallery_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "gallery_share_owner_id_all_user_id_fk": {
          "name": "gallery_share_owner_id_all_user_id_fk",
          "tableFrom": "gallery_share",
          "tableTo": "all_user",
          "columnsFrom": [
            "owner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "gallery_share_shared_with_id_all_user_id_fk": {
          "name": "gallery_share_shared_with_id_all_user_id_fk",
          "tableFrom": "gallery_share",
          "tableTo": "all_user",
          "columnsFrom": [
            "shared_with_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "gallery_share_group_id_group_id_fk": {
          "name": "gallery_share_group_id_group_id_fk",
          "tableFrom": "gallery_share",
          "tableTo": "group",
          "columnsFrom": [
            "group_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.group": {
      "name": "group",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "owner_id": {
          "name": "owner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "metadata": {
          "name": "metadata",
          "type": "json",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::json"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "group_owner_id_user_id_fk": {
          "name": "group_owner_id_user_id_fk",
          "tableFrom": "group",
          "tableTo": "user",
          "columnsFrom": [
            "owner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.group_member": {
      "name": "group_member",
      "schema": "",
      "columns": {
        "group_id": {
          "name": "group_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'member'"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "group_member_group_id_group_id_fk": {
          "name": "group_member_group_id_group_id_fk",
          "tableFrom": "group_member",
          "tableTo": "group",
          "columnsFrom": [
            "group_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "group_member_user_id_user_id_fk": {
          "name": "group_member_user_id_user_id_fk",
          "tableFrom": "group_member",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "group_member_group_id_user_id_pk": {
          "name": "group_member_group_id_user_id_pk",
          "columns": [
            "group_id",
            "user_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.idempotency_keys": {
      "name": "idempotency_keys",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "operation": {
          "name": "operation",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "request_params": {
          "name": "request_params",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "result": {
          "name": "result",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "error": {
          "name": "error",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "attempt_count": {
          "name": "attempt_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "max_attempts": {
          "name": "max_attempts",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 3
        },
        "last_attempt_at": {
          "name": "last_attempt_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "locked_until": {
          "name": "locked_until",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "locked_by": {
          "name": "locked_by",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idempotency_keys_user_status_idx": {
          "name": "idempotency_keys_user_status_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idempotency_keys_expires_at_idx": {
          "name": "idempotency_keys_expires_at_idx",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"idempotency_keys\".\"status\" != 'completed'",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idempotency_keys_pending_uniq": {
          "name": "idempotency_keys_pending_uniq",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "where": "\"idempotency_keys\".\"status\" = 'pending'",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "idempotency_keys_user_id_user_id_fk": {
          "name": "idempotency_keys_user_id_user_id_fk",
          "tableFrom": "idempotency_keys",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "idempotency_keys_status_check": {
          "name": "idempotency_keys_status_check",
          "value": "(\n        (\"idempotency_keys\".\"status\" = 'pending' AND \"idempotency_keys\".\"locked_until\" IS NOT NULL) OR \n        (\"idempotency_keys\".\"status\" IN ('completed', 'failed') AND \"idempotency_keys\".\"locked_until\" IS NULL)\n      )"
        },
        "idempotency_keys_expiry_check": {
          "name": "idempotency_keys_expiry_check",
          "value": "\"idempotency_keys\".\"expires_at\" > \"idempotency_keys\".\"created_at\""
        },
        "idempotency_keys_attempts_check": {
          "name": "idempotency_keys_attempts_check",
          "value": "\"idempotency_keys\".\"attempt_count\" <= \"idempotency_keys\".\"max_attempts\""
        }
      },
      "isRLSEnabled": false
    },
    "public.ii_nonce": {
      "name": "ii_nonce",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "nonce_hash": {
          "name": "nonce_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "used_at": {
          "name": "used_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "context": {
          "name": "context",
          "type": "json",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::json"
        }
      },
      "indexes": {
        "ii_nonces_hash_idx": {
          "name": "ii_nonces_hash_idx",
          "columns": [
            {
              "expression": "nonce_hash",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ii_nonces_expires_idx": {
          "name": "ii_nonces_expires_idx",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ii_nonces_used_idx": {
          "name": "ii_nonces_used_idx",
          "columns": [
            {
              "expression": "used_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ii_nonces_active_idx": {
          "name": "ii_nonces_active_idx",
          "columns": [
            {
              "expression": "used_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ii_nonces_created_idx": {
          "name": "ii_nonces_created_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.image_details": {
      "name": "image_details",
      "schema": "",
      "columns": {
        "memory_id": {
          "name": "memory_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "width": {
          "name": "width",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "height": {
          "name": "height",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "camera": {
          "name": "camera",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "focal": {
          "name": "focal",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "iso": {
          "name": "iso",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "aperture": {
          "name": "aperture",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "shutter_speed": {
          "name": "shutter_speed",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "orientation": {
          "name": "orientation",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "image_details_memory_id_memories_id_fk": {
          "name": "image_details_memory_id_memories_id_fk",
          "tableFrom": "image_details",
          "tableTo": "memories",
          "columnsFrom": [
            "memory_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.memory_assets": {
      "name": "memory_assets",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "memory_id": {
          "name": "memory_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "group_id": {
          "name": "group_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "variant_of_asset_id": {
          "name": "variant_of_asset_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "variant_type": {
          "name": "variant_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "asset_type": {
          "name": "asset_type",
          "type": "asset_type_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "storage_backend": {
          "name": "storage_backend",
          "type": "storage_backend_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "bucket": {
          "name": "bucket",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "storage_key": {
          "name": "storage_key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "recipe_version": {
          "name": "recipe_version",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'v1'"
        },
        "transform_spec": {
          "name": "transform_spec",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "bytes": {
          "name": "bytes",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "width": {
          "name": "width",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "height": {
          "name": "height",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "color_space": {
          "name": "color_space",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "icc_profile": {
          "name": "icc_profile",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "megapixels": {
          "name": "megapixels",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "mime_type": {
          "name": "mime_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "upload_status": {
          "name": "upload_status",
          "type": "asset_upload_status_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'pending'"
        },
        "processing_status": {
          "name": "processing_status",
          "type": "processing_status_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'pending'"
        },
        "lifecycle_status": {
          "name": "lifecycle_status",
          "type": "asset_lifecycle_status_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        },
        "storage_visibility": {
          "name": "storage_visibility",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'private'"
        },
        "content_hash": {
          "name": "content_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "computed_by": {
          "name": "computed_by",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "etag": {
          "name": "etag",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "retry_count": {
          "name": "retry_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "max_retries": {
          "name": "max_retries",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 3
        },
        "original_name": {
          "name": "original_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "original_mime_type": {
          "name": "original_mime_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "memory_assets_group_variant_unique": {
          "name": "memory_assets_group_variant_unique",
          "columns": [
            {
              "expression": "group_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "variant_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memory_assets_variant_of_unique": {
          "name": "memory_assets_variant_of_unique",
          "columns": [
            {
              "expression": "variant_of_asset_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "variant_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memory_assets_memory_idx": {
          "name": "memory_assets_memory_idx",
          "columns": [
            {
              "expression": "memory_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memory_assets_group_idx": {
          "name": "memory_assets_group_idx",
          "columns": [
            {
              "expression": "group_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memory_assets_type_idx": {
          "name": "memory_assets_type_idx",
          "columns": [
            {
              "expression": "asset_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memory_assets_url_idx": {
          "name": "memory_assets_url_idx",
          "columns": [
            {
              "expression": "url",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memory_assets_storage_idx": {
          "name": "memory_assets_storage_idx",
          "columns": [
            {
              "expression": "storage_backend",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "storage_key",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memory_assets_content_hash_idx": {
          "name": "memory_assets_content_hash_idx",
          "columns": [
            {
              "expression": "content_hash",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "memory_assets_memory_id_memories_id_fk": {
          "name": "memory_assets_memory_id_memories_id_fk",
          "tableFrom": "memory_assets",
          "tableTo": "memories",
          "columnsFrom": [
            "memory_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "memory_assets_variant_of_asset_id_memory_assets_id_fk": {
          "name": "memory_assets_variant_of_asset_id_memory_assets_id_fk",
          "tableFrom": "memory_assets",
          "tableTo": "memory_assets",
          "columnsFrom": [
            "variant_of_asset_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "memory_assets_bytes_positive": {
          "name": "memory_assets_bytes_positive",
          "value": "\"memory_assets\".\"bytes\" > 0"
        },
        "memory_assets_dimensions_positive": {
          "name": "memory_assets_dimensions_positive",
          "value": "(\"memory_assets\".\"width\" IS NULL OR \"memory_assets\".\"width\" > 0) AND (\"memory_assets\".\"height\" IS NULL OR \"memory_assets\".\"height\" > 0)"
        },
        "memory_assets_variant_check": {
          "name": "memory_assets_variant_check",
          "value": "(variant_of_asset_id IS NULL) = (variant_type IS NULL)"
        },
        "memory_assets_processing_status_check": {
          "name": "memory_assets_processing_status_check",
          "value": "processing_status = 'completed' OR (width IS NULL AND height IS NULL)"
        },
        "memory_assets_megapixels_check": {
          "name": "memory_assets_megapixels_check",
          "value": "megapixels IS NULL OR megapixels <= 80"
        }
      },
      "isRLSEnabled": false
    },
    "public.memory_comments": {
      "name": "memory_comments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "memory_id": {
          "name": "memory_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "all_user_id": {
          "name": "all_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "parent_comment_id": {
          "name": "parent_comment_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "memory_comments_memory_created_idx": {
          "name": "memory_comments_memory_created_idx",
          "columns": [
            {
              "expression": "memory_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memory_comments_user_idx": {
          "name": "memory_comments_user_idx",
          "columns": [
            {
              "expression": "all_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memory_comments_parent_idx": {
          "name": "memory_comments_parent_idx",
          "columns": [
            {
              "expression": "parent_comment_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "memory_comments_memory_id_memories_id_fk": {
          "name": "memory_comments_memory_id_memories_id_fk",
          "tableFrom": "memory_comments",
          "tableTo": "memories",
          "columnsFrom": [
            "memory_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "memory_comments_all_user_id_all_user_id_fk": {
          "name": "memory_comments_all_user_id_all_user_id_fk",
          "tableFrom": "memory_comments",
          "tableTo": "all_user",
          "columnsFrom": [
            "all_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.memory_likes": {
      "name": "memory_likes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "memory_id": {
          "name": "memory_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "all_user_id": {
          "name": "all_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "memory_likes_unique": {
          "name": "memory_likes_unique",
          "columns": [
            {
              "expression": "memory_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "all_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memory_likes_memory_idx": {
          "name": "memory_likes_memory_idx",
          "columns": [
            {
              "expression": "memory_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memory_likes_user_idx": {
          "name": "memory_likes_user_idx",
          "columns": [
            {
              "expression": "all_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "memory_likes_memory_id_memories_id_fk": {
          "name": "memory_likes_memory_id_memories_id_fk",
          "tableFrom": "memory_likes",
          "tableTo": "memories",
          "columnsFrom": [
            "memory_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "memory_likes_all_user_id_all_user_id_fk": {
          "name": "memory_likes_all_user_id_all_user_id_fk",
          "tableFrom": "memory_likes",
          "tableTo": "all_user",
          "columnsFrom": [
            "all_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.memory_metadata": {
      "name": "memory_metadata",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "memory_id": {
          "name": "memory_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "memory_type": {
          "name": "memory_type",
          "type": "memory_type_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "universal_data": {
          "name": "universal_data",
          "type": "json",
          "primaryKey": false,
          "notNull": false
        },
        "processing_status": {
          "name": "processing_status",
          "type": "processing_status_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "processing_error": {
          "name": "processing_error",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "memory_metadata_unique": {
          "name": "memory_metadata_unique",
          "columns": [
            {
              "expression": "memory_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "memory_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memory_metadata_memory_idx": {
          "name": "memory_metadata_memory_idx",
          "columns": [
            {
              "expression": "memory_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "memory_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "memory_metadata_status_idx": {
          "name": "memory_metadata_status_idx",
          "columns": [
            {
              "expression": "processing_status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.memory_share": {
      "name": "memory_share",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "memory_id": {
          "name": "memory_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "memory_type": {
          "name": "memory_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "owner_id": {
          "name": "owner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "shared_with_type": {
          "name": "shared_with_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "shared_with_id": {
          "name": "shared_with_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "group_id": {
          "name": "group_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "shared_relationship_type": {
          "name": "shared_relationship_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_level": {
          "name": "access_level",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'read'"
        },
        "invitee_secure_code": {
          "name": "invitee_secure_code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "secure_code_created_at": {
          "name": "secure_code_created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "memory_share_owner_id_all_user_id_fk": {
          "name": "memory_share_owner_id_all_user_id_fk",
          "tableFrom": "memory_share",
          "tableTo": "all_user",
          "columnsFrom": [
            "owner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "memory_share_shared_with_id_all_user_id_fk": {
          "name": "memory_share_shared_with_id_all_user_id_fk",
          "tableFrom": "memory_share",
          "tableTo": "all_user",
          "columnsFrom": [
            "shared_with_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "memory_share_group_id_group_id_fk": {
          "name": "memory_share_group_id_group_id_fk",
          "tableFrom": "memory_share",
          "tableTo": "group",
          "columnsFrom": [
            "group_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.note_details": {
      "name": "note_details",
      "schema": "",
      "columns": {
        "memory_id": {
          "name": "memory_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "note_details_memory_id_memories_id_fk": {
          "name": "note_details_memory_id_memories_id_fk",
          "tableFrom": "note_details",
          "tableTo": "memories",
          "columnsFrom": [
            "memory_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.people_in_memories": {
      "name": "people_in_memories",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "memory_id": {
          "name": "memory_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "all_user_id": {
          "name": "all_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'subject'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "people_in_memories_unique": {
          "name": "people_in_memories_unique",
          "columns": [
            {
              "expression": "memory_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "all_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "people_in_memories_memory_idx": {
          "name": "people_in_memories_memory_idx",
          "columns": [
            {
              "expression": "memory_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "people_in_memories_user_idx": {
          "name": "people_in_memories_user_idx",
          "columns": [
            {
              "expression": "all_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "people_in_memories_memory_id_memories_id_fk": {
          "name": "people_in_memories_memory_id_memories_id_fk",
          "tableFrom": "people_in_memories",
          "tableTo": "memories",
          "columnsFrom": [
            "memory_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "people_in_memories_all_user_id_all_user_id_fk": {
          "name": "people_in_memories_all_user_id_all_user_id_fk",
          "tableFrom": "people_in_memories",
          "tableTo": "all_user",
          "columnsFrom": [
            "all_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.relationship": {
      "name": "relationship",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "related_user_id": {
          "name": "related_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "note": {
          "name": "note",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "unique_relation_idx": {
          "name": "unique_relation_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "related_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "relationship_user_id_all_user_id_fk": {
          "name": "relationship_user_id_all_user_id_fk",
          "tableFrom": "relationship",
          "tableTo": "all_user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "relationship_related_user_id_all_user_id_fk": {
          "name": "relationship_related_user_id_all_user_id_fk",
          "tableFrom": "relationship",
          "tableTo": "all_user",
          "columnsFrom": [
            "related_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.s3_configurations": {
      "name": "s3_configurations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "endpoint": {
          "name": "endpoint",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "region": {
          "name": "region",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "bucket": {
          "name": "bucket",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_key_id": {
          "name": "access_key_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "secret_access_key": {
          "name": "secret_access_key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "path_style": {
          "name": "path_style",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "ssl_enabled": {
          "name": "ssl_enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "port": {
          "name": "port",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "is_valid": {
          "name": "is_valid",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "last_validated_at": {
          "name": "last_validated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "validation_error": {
          "name": "validation_error",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "total_assets": {
          "name": "total_assets",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "total_bytes": {
          "name": "total_bytes",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "is_default": {
          "name": "is_default",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "tags": {
          "name": "tags",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "s3_configs_user_idx": {
          "name": "s3_configs_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "is_default",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "s3_configs_user_default_uniq": {
          "name": "s3_configs_user_default_uniq",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "is_default",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "where": "\"s3_configurations\".\"is_default\" = true",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "s3_configurations_user_id_user_id_fk": {
          "name": "s3_configurations_user_id_user_id_fk",
          "tableFrom": "s3_configurations",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "s3_configs_port_check": {
          "name": "s3_configs_port_check",
          "value": "\"s3_configurations\".\"port\" IS NULL OR (\"s3_configurations\".\"port\" > 0 AND \"s3_configurations\".\"port\" <= 65535)"
        }
      },
      "isRLSEnabled": false
    },
    "public.service_deployments": {
      "name": "service_deployments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "frontend_location": {
          "name": "frontend_location",
          "type": "frontend_hosting_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "backend_location": {
          "name": "backend_location",
          "type": "backend_hosting_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "database_location": {
          "name": "database_location",
          "type": "database_hosting_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "blob_location": {
          "name": "blob_location",
          "type": "blob_hosting_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "deployed_at": {
          "name": "deployed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "last_checked_at": {
          "name": "last_checked_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "deployment_metadata": {
          "name": "deployment_metadata",
          "type": "json",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::json"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "service_deployments_user_active_idx": {
          "name": "service_deployments_user_active_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "is_active",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "service_deployments_user_idx": {
          "name": "service_deployments_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "service_deployments_user_id_user_id_fk": {
          "name": "service_deployments_user_id_user_id_fk",
          "tableFrom": "service_deployments",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.session": {
      "name": "session",
      "schema": "",
      "columns": {
        "sessionToken": {
          "name": "sessionToken",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "session_userId_user_id_fk": {
          "name": "session_userId_user_id_fk",
          "tableFrom": "session",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.storage_edges": {
      "name": "storage_edges",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "memory_id": {
          "name": "memory_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "memory_type": {
          "name": "memory_type",
          "type": "memory_type_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "artifact": {
          "name": "artifact",
          "type": "artifact_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "backend": {
          "name": "backend",
          "type": "storage_backend_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "present": {
          "name": "present",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "location": {
          "name": "location",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "content_hash": {
          "name": "content_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "size_bytes": {
          "name": "size_bytes",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "sync_state": {
          "name": "sync_state",
          "type": "sync_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'idle'"
        },
        "last_synced_at": {
          "name": "last_synced_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "sync_error": {
          "name": "sync_error",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "uq_edge": {
          "name": "uq_edge",
          "columns": [
            {
              "expression": "memory_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "memory_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "artifact",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "backend",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_edges_memory": {
          "name": "ix_edges_memory",
          "columns": [
            {
              "expression": "memory_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "memory_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_edges_backend_present": {
          "name": "ix_edges_backend_present",
          "columns": [
            {
              "expression": "backend",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "artifact",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "present",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ix_edges_sync_state": {
          "name": "ix_edges_sync_state",
          "columns": [
            {
              "expression": "sync_state",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.temporary_user": {
      "name": "temporary_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "secure_code": {
          "name": "secure_code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "secure_code_expires_at": {
          "name": "secure_code_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "invited_by_all_user_id": {
          "name": "invited_by_all_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "registration_status": {
          "name": "registration_status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "metadata": {
          "name": "metadata",
          "type": "json",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::json"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "temporary_user_invited_by_fk": {
          "name": "temporary_user_invited_by_fk",
          "tableFrom": "temporary_user",
          "tableTo": "all_user",
          "columnsFrom": [
            "invited_by_all_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.upload_chunks": {
      "name": "upload_chunks",
      "schema": "",
      "columns": {
        "upload_session_id": {
          "name": "upload_session_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "chunk_number": {
          "name": "chunk_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "chunk_size": {
          "name": "chunk_size",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "storage_backend": {
          "name": "storage_backend",
          "type": "storage_backend_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "storage_key": {
          "name": "storage_key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content_hash": {
          "name": "content_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "error": {
          "name": "error",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "uploaded_at": {
          "name": "uploaded_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "upload_chunks_session_status_idx": {
          "name": "upload_chunks_session_status_idx",
          "columns": [
            {
              "expression": "upload_session_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "chunk_number",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "upload_chunks_storage_idx": {
          "name": "upload_chunks_storage_idx",
          "columns": [
            {
              "expression": "storage_backend",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "storage_key",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "upload_chunks_upload_session_id_upload_sessions_id_fk": {
          "name": "upload_chunks_upload_session_id_upload_sessions_id_fk",
          "tableFrom": "upload_chunks",
          "tableTo": "upload_sessions",
          "columnsFrom": [
            "upload_session_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "upload_chunks_upload_session_id_chunk_number_pk": {
          "name": "upload_chunks_upload_session_id_chunk_number_pk",
          "columns": [
            "upload_session_id",
            "chunk_number"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.upload_sessions": {
      "name": "upload_sessions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_name": {
          "name": "file_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_size": {
          "name": "file_size",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "file_type": {
          "name": "file_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "chunk_size": {
          "name": "chunk_size",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "total_chunks": {
          "name": "total_chunks",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "uploaded_chunks": {
          "name": "uploaded_chunks",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "storage_backend": {
          "name": "storage_backend",
          "type": "storage_backend_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "storage_key": {
          "name": "storage_key",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "content_hash": {
          "name": "content_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "error": {
          "name": "error",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "upload_sessions_user_status_idx": {
          "name": "upload_sessions_user_status_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "upload_sessions_expires_at_idx": {
          "name": "upload_sessions_expires_at_idx",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "upload_sessions_user_id_user_id_fk": {
          "name": "upload_sessions_user_id_user_id_fk",
          "tableFrom": "upload_sessions",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "upload_sessions_chunks_check": {
          "name": "upload_sessions_chunks_check",
          "value": "(\n        \"upload_sessions\".\"chunk_size\" IS NULL OR \n        (\"upload_sessions\".\"chunk_size\" > 0 AND \n         \"upload_sessions\".\"total_chunks\" IS NOT NULL AND \n         \"upload_sessions\".\"uploaded_chunks\" <= \"upload_sessions\".\"total_chunks\")\n      )"
        },
        "upload_sessions_status_check": {
          "name": "upload_sessions_status_check",
          "value": "(\n        (\"upload_sessions\".\"status\" = 'completed' AND \"upload_sessions\".\"storage_key\" IS NOT NULL) OR\n        (\"upload_sessions\".\"status\" != 'completed')\n      )"
        }
      },
      "isRLSEnabled": false
    },
    "public.user_hosting_preferences": {
      "name": "user_hosting_preferences",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "frontend_hosting": {
          "name": "frontend_hosting",
          "type": "frontend_hosting_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'vercel'"
        },
        "backend_hosting": {
          "name": "backend_hosting",
          "type": "backend_hosting_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'vercel'"
        },
        "database_hosting": {
          "name": "database_hosting",
          "type": "database_hosting_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'neon'"
        },
        "blob_hosting": {
          "name": "blob_hosting",
          "type": "blob_hosting_t",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'vercel_blob'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "user_hosting_preferences_user_id_idx": {
          "name": "user_hosting_preferences_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "user_hosting_preferences_user_id_user_id_fk": {
          "name": "user_hosting_preferences_user_id_user_id_fk",
          "tableFrom": "user_hosting_preferences",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user": {
      "name": "user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "emailVerified": {
          "name": "emailVerified",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "parent_id": {
          "name": "parent_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "invited_by_all_user_id": {
          "name": "invited_by_all_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "invited_at": {
          "name": "invited_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "registration_status": {
          "name": "registration_status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "user_type": {
          "name": "user_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'personal'"
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'user'"
        },
        "plan": {
          "name": "plan",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'free'"
        },
        "premium_expires_at": {
          "name": "premium_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "active_deployment_id": {
          "name": "active_deployment_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "metadata": {
          "name": "metadata",
          "type": "json",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::json"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_active_deployment_id_service_deployments_id_fk": {
          "name": "user_active_deployment_id_service_deployments_id_fk",
          "tableFrom": "user",
          "tableTo": "service_deployments",
          "columnsFrom": [
            "active_deployment_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "user_invited_by_fk": {
          "name": "user_invited_by_fk",
          "tableFrom": "user",
          "tableTo": "all_user",
          "columnsFrom": [
            "invited_by_all_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "user_parent_fk": {
          "name": "user_parent_fk",
          "tableFrom": "user",
          "tableTo": "user",
          "columnsFrom": [
            "parent_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_email_unique": {
          "name": "user_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        },
        "user_username_unique": {
          "name": "user_username_unique",
          "nullsNotDistinct": false,
          "columns": [
            "username"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.verificationToken": {
      "name": "verificationToken",
      "schema": "",
      "columns": {
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {
        "verificationToken_identifier_token_pk": {
          "name": "verificationToken_identifier_token_pk",
          "columns": [
            "identifier",
            "token"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.video_details": {
      "name": "video_details",
      "schema": "",
      "columns": {
        "memory_id": {
          "name": "memory_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "duration_ms": {
          "name": "duration_ms",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "width": {
          "name": "width",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "height": {
          "name": "height",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "codec": {
          "name": "codec",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "fps": {
          "name": "fps",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "video_details_memory_id_memories_id_fk": {
          "name": "video_details_memory_id_memories_id_fk",
          "tableFrom": "video_details",
          "tableTo": "memories",
          "columnsFrom": [
            "memory_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.artifact_t": {
      "name": "artifact_t",
      "schema": "public",
      "values": [
        "metadata",
        "asset"
      ]
    },
    "public.asset_lifecycle_status_t": {
      "name": "asset_lifecycle_status_t",
      "schema": "public",
      "values": [
        "active",
        "tombstoned",
        "deleted"
      ]
    },
    "public.asset_type_t": {
      "name": "asset_type_t",
      "schema": "public",
      "values": [
        "original",
        "display",
        "thumb",
        "placeholder",
        "poster",
        "waveform"
      ]
    },
    "public.asset_upload_status_t": {
      "name": "asset_upload_status_t",
      "schema": "public",
      "values": [
        "pending",
        "uploading",
        "completed",
        "failed"
      ]
    },
    "public.backend_hosting_t": {
      "name": "backend_hosting_t",
      "schema": "public",
      "values": [
        "vercel",
        "icp"
      ]
    },
    "public.blob_hosting_t": {
      "name": "blob_hosting_t",
      "schema": "public",
      "values": [
        "s3",
        "vercel_blob",
        "icp",
        "arweave",
        "ipfs",
        "neon"
      ]
    },
    "public.database_hosting_t": {
      "name": "database_hosting_t",
      "schema": "public",
      "values": [
        "neon",
        "icp"
      ]
    },
    "public.frontend_hosting_t": {
      "name": "frontend_hosting_t",
      "schema": "public",
      "values": [
        "vercel",
        "icp"
      ]
    },
    "public.hosting_provider_t": {
      "name": "hosting_provider_t",
      "schema": "public",
      "values": [
        "vercel",
        "s3",
        "vercel_blob",
        "neon",
        "icp",
        "arweave",
        "ipfs"
      ]
    },
    "public.memory_status_t": {
      "name": "memory_status_t",
      "schema": "public",
      "values": [
        "pending",
        "active",
        "failed",
        "tombstoned",
        "deleted"
      ]
    },
    "public.memory_type_t": {
      "name": "memory_type_t",
      "schema": "public",
      "values": [
        "image",
        "video",
        "note",
        "document",
        "audio"
      ]
    },
    "public.processing_status_t": {
      "name": "processing_status_t",
      "schema": "public",
      "values": [
        "pending",
        "processing",
        "completed",
        "failed"
      ]
    },
    "public.storage_backend_t": {
      "name": "storage_backend_t",
      "schema": "public",
      "values": [
        "s3",
        "vercel_blob",
        "icp",
        "arweave",
        "ipfs",
        "neon"
      ]
    },
    "public.sync_t": {
      "name": "sync_t",
      "schema": "public",
      "values": [
        "idle",
        "migrating",
        "failed"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}